pass structs not massive amounts of parameters

2 10 accumulate -> sum of 2 to 10 

 
violate -> violate = true and end


## system dictionary
debug print
fetches dictionary entries



if ... then ....
else-if ... then ....
else .....

if ... and ... then
if... or ... then

if_or_stack?


## math

rational numbers!
math.log...

log 
exp
pow
sin
cos
arctan
....

1/3 = 0.3
0.3 0.3  -> 0.6

(2 3 4) (>2) filter -> (3 4) 
(2 3 4) (<2) filter -> ()

(2 3 4) (>2) where -> (1 2)
(2 3 4) (=2) where -> (0)

standard tokens
(>2) (=2) (!=2) (>=2) (<=2)
(even) (!even) (prime) (!prime)
(>len2) for strings


("aaa" "a") (>len2) filter -> ("aaa")


(2 3 4 "stored") (>2) store-where -> "stored" variable with (1 2)

variable class with objects


make word immediate?

the word IMMEDIATE makes a word “immediate.” It is used in the form:

: name definition ; IMMEDIATE

that is, it is executed right after the compilation of the definition.

To give an immediate example, let’s define

: SAY-HELLO   ." Hello" ; IMMEDIATE 

We can execute SAY-HELLO interactively, just as we could if it were not immediate.

SAY-HELLO↵ Hello ok 

But if we put SAY-HELLO inside another definition, it will execute at compile time:

: GREET   SAY-HELLO ." I speak Forth " ;↵ Hello ok  

rather than at execution time:

GREET↵ I speak Forth ok 


make words objects, set immediate flag







